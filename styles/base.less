@import "syntax-variables";
@import "vim-mode";
@import "source-gfm";

atom-text-editor, :host {
  font-weight: 500;
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

atom-panel .output {
  font-size: 1.3em;
}

.status-bar {
  color: @grey;
}

.comment {
  color: @grey;
  font-weight: 500;

  &.quote {
    font-style: oblique;
    font-family: Georgia, serif;
    font-weight: 600;
    -webkit-font-smoothing: aliased;
  }
}

.entity {
  &.name.type {
    font-weight: 400;
    color: @white;
  }

  &.other.inherited-class {
    color: @cyan;
    font-weight: 500;
  }
}

.keyword {
  font-weight: 600;
  color: @blue;

  &.control {
    color: @blue;
    font-weight: 600;
  }

  &.operator {
    font-weight: 500;

    &.arithmetic {
      color: @orange;
    }

    &.assignment {
      font-weight: 500;
      color: @blue;
    }

    &.pipe {
      color: @grey-middle;
    }

    &.arrow {
      color: @blue;
      font-weight: 800;
    }

    &.logical.python {
      color: @blue;
    }

    &.elm {
      color: @blue;
      font-weight: 600;
    }
  }


  &.other.special-method {
    color: @blue;
    font-weight: 600;
  }

  &.other.unit {
    color: @orange;
  }

  &.other.colon {
    font-weight: 500;
    color: @blue;
  }
}

.storage {
  color: @blue;
  font-weight: 600;
}

.constant {
  color: @orange;

  &.language.python {
    color: @grey-middle;
  }

  &.keyword {
    font-weight: 500;
    color: @grey-middle;
  }

  &.character.escape {
    color: @cyan;
  }

  &.numeric {
    color: @cyan;
  }

  &.other.color {
    color: @cyan;
  }

  &.other.caps {
    color: @white;
  }

  &.other.symbol {
    font-weight: 400;
    color: @white;
  }

  &.other.keywords {
    color: @grey-middle;
  }

  &.other.elm {
    color: @grey-middle;
  }
}

.variable {
  color: @grey-very-light;

  &.interpolation {
    color: darken(@cyan, 10%);
  }

  &.magic {
    color: @grey-middle;
    font-weight: 500;
  }

  &.language {
    color: @white;

    &.special {
      color: @cyan;
      font-weight: 400;
    }
  }

  &.parameter.function {
    color: @white;
  }

  &.parameter.function-call {
    color: @grey-light;
  }

  &.other.constant {
    color: @grey-middle;
  }

  &.other.anonymous {
    color: @orange;
  }

  &.other.readwrite {
    color: @cyan;
  }

  &.unordered.list, &.ordered.list {
    font-weight: 600;
    color: @blue;
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  font-weight: 500;
  font-style: italic;
  padding-right: 1px;
  color: @cyan;

  &.regexp {
    color: @cyan;

    .source.ruby.embedded {
      color: @red;
    }
  }

  &.other.link {
    color: @cyan;
  }
}

.punctuation {
  &.parenthesis {
    color: @white;
  }

  &.separator.inheritance {
    color: @cyan;
  }

  &.separator.annotation {
    color: @grey-middle;
  }

  &.separator.parameters {
    color: @grey-light;
  }

  &.definition {
    &.dict {
      color: @white;
    }

    &.list {
      color: @white;
    }

    &.inheritance {
      color: @white;
    }

    &.variable {
      color: @cyan;
    }

    &.comment {
      color: @grey;
      font-weight: 500;
    }

    &.string,
    &.array {
      color: @grey-middle;
    }

    &.parameters {
      color: @grey-light;
    }

    &.arguments {
      color: @grey-middle;
    }

    &.constant {
      font-weight: 500;
      color: @blue;
    }

    &.heading,
    &.identity {
      font-weight: 600;
      color: @blue;
    }

    &.bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: @grey-middle;
  }

  &.section {
    &.expression.clojure {
      color: @grey-middle;
    }

    &.class {
      color: @grey-light;
    }

    &.array {
      color: @grey-middle;
    }

    &.scope {
      font-weight: 600;
      color: @blue;
    }

    &.vector {
      color: @white;
    }
  }
}

.support {
  &.class {
    color: @grey-middle;
  }

  &.constant.elm {
    color: @grey-middle;
  }

  &.function  {
    color: @cyan;

    &.magic {
      color: @white;
    }

    &.builtin {
      color: @white;

      &.decorator {
        color: @grey-middle;
      }
    }

    &.any-method {
      font-weight: 600;
      color: @blue;
    }
  }

  &.type.python {
    color: @cyan;
  }

  &.type.exception {
    color: @cyan;
  }

  &.type.prelude.elm {
    color: @cyan;
  }
}

.entity {
  &.name.function {
    font-weight: 400;
    color: @white;

    &.decorator {
      font-weight: 500;
      color: @grey-middle;
    }

    &.clojure {
      color: @grey-middle;
      font-weight: 500;
    }
  }

  &.name.class, &.name.type.class {
    font-weight: 400;
    color: @white;
  }

  &.name.section {
    font-weight: 600;
    color: @blue;
  }

  &.name.tag {
    font-weight: 600;
    color: @blue;
  }

  &.other.attribute-name {
    color: @orange;

    &.html {
      color: @grey-middle;
    }

    &.id {
      font-weight: 600;
      color: @blue;
    }
  }
}

.meta {
  &.class.inheritance {
    color: @cyan;
  }

  &.symbol.clojure {
    color: @cyan;
  }

  &.function {
    &.parameters {
      color: @grey-middle;
    }
  }

  &.function-call {
    color: @blue;

    &.arguments {
      color: @grey-middle;
    }
  }

  &.vector {
    color: @blue;
  }

  &.link {
    color: @orange;
  }

  &.require {
    color: @grey-middle;
  }

  &.selector {
    color: @purple;
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.property-name {
    color: @grey-middle;
  }

  &.structure.dictionary {
    font-weight: 500;
    color: @blue;

    .string.quoted.double {
      font-weight: 500;
      color: @blue;
    }
  }

  &.structure.dictionary.value {
    color: @white;

    .string.quoted.double {
      color: @white;
    }
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    font-weight: 600;
    color: @blue;
  }

  &.changed {
    color: @red;
  }

  &.deleted {
    color: @red;
  }

  &.italic {
    background-color: @white;
    color: @grey-dark;

    &:hover {
      background-color: @orange;
    }
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @red;
  }

  &.quote {
    color: @orange;
  }

  &.underline.link {
    color: @grey-middle;
  }

  &.raw {
    color: @cyan;
  }

  &.raw.inline {
    color: @green;
  }

  &.heading {
    color: @green;

    &.punctuation.definition.heading {
      font-weight: 600;
      color: @blue;
    }
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}
